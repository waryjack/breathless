@import url("https://fonts.googleapis.com/css2?family=Architects+Daughter&family=Londrina+Solid&family=Permanent+Marker&display=swap");
/* Styles limited to breathless sheets */
.breathless .charsheet-section {
  font-family: "Permanent Marker", cursive;
  margin-bottom: 10px;
}
.breathless .charsheet-section .left_column {
  margin-right: 24px;
}
.breathless .charsheet-section .item-section-header {
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
  margin-bottom: 5px;
}
.breathless .charsheet-section .item-section-header button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;
  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;
  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: normal;
  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;
  color: #beb19b;
  font-size: 2em;
}
.breathless .charsheet-section h2 {
  display: inline;
  font-size: 2em;
}
.breathless header {
  margin-bottom: 20px;
}
.breathless .header_title {
  margin-bottom: 10px;
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
  text-align: center;
}
.breathless .header_section {
  margin-bottom: 10px;
}
.breathless .header_section input[type=text] {
  font-family: "Permanent Marker", cursive;
  width: 100%;
  padding: 12px 5px;
  margin: 5px 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: none;
  background: none;
  border-bottom: 2px solid black;
  font-size: 1.5em;
}
.breathless .header_section label {
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
  font-size: 1.5em;
  -ms-flex-item-align: center;
  align-self: center;
}
.breathless .header_section .header_buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-evenly !important;
  -ms-flex-pack: space-evenly !important;
  justify-content: space-evenly !important;
}
.breathless .header_section .header_buttons button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;
  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;
  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: normal;
  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;
  border: 2px solid black;
  padding-left: 12px;
  padding-right: 12px;
  color: white;
  border-style: inset;
  background: black;
  border-radius: 5px;
  font-size: 1.25em;
  text-align: center;
}
.breathless .stress_box {
  position: relative;
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
}
.breathless .stress_box .stress {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 6px;
}
.breathless .stress_box .stress a {
  font-size: 3em;
}
.breathless .stress_box .vulnerable_message {
  position: absolute;
  font-size: 1em;
  left: 5px;
  top: 38px;
  color: rgb(103, 38, 38);
}
.breathless .single-circle-button-group {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 12px;
}
.breathless .single-circle-button-group h2 {
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
}
.breathless .single-circle-button-group a {
  font-size: 3em;
}
.breathless .csf {
  font-family: "Permanent Marker", cursive;
}
.breathless .csh {
  font-family: "Londrina Solid", cursive;
  text-transform: uppercase;
}
.breathless * {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
.breathless .window-content {
  background-color: #f1e9db;
  background-image: url("../assets/grunge1kt.png") !important;
  background-position: right bottom;
  background-repeat: no-repeat;
}
.breathless h1, .breathless h2, .breathless h3, .breathless h4, .breathless h5 {
  border: none;
  text-decoration: none;
  margin: 0px;
  -ms-flex-item-align: center;
  align-self: center;
}
.breathless .item-block {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: 2px solid rgba(135, 126, 112, 0.3803921569);
  border-radius: 10px;
  gap: 10px;
  padding: 5px 10px 5px 10px;
  margin-bottom: 10px;
}
.breathless .item-block .item-dice-box, .breathless .item-block .item-dice-box-initial {
  border: 2px dotted rgb(61, 61, 61);
  padding-left: 6px;
  padding-right: 6px;
  padding-top: 3px;
  padding-bottom: 0px;
  text-align: center;
  font-size: 1.5em;
  min-width: 60px;
}
.breathless .item-block .item-dice-box {
  background-color: rgba(255, 255, 255, 0.1803921569);
}
.breathless .item-block .item-dice-box-initial {
  background: rgba(188, 179, 164, 0.793);
  color: #6b6356;
}
.breathless .item-block .item-controls {
  color: #877e70;
  margin: 0px 0px 0px 10px;
}
.breathless .item-block .item-name {
  text-transform: uppercase;
}
.breathless .caps {
  text-transform: uppercase;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
